[gcode_macro PARK]
description: park toolhead with relative coordinat
gcode:
    {% set vars = printer.save_variables.variables %}
    {% set settings = printer.configfile.settings %}
    {% set is_absolute_coordinates = printer.gcode_move.absolute_coordinates %}

    {% set act       = printer.gcode_move.gcode_position %}
    {% set min       = printer.toolhead.axis_minimum %}
    {% set max       = printer.toolhead.axis_maximum %}

    {% set x_park = params.X|default(max.x / 2.0)|float %}
    {% set y_park = params.Y|default(max.y - 5.0)|float %}

    {% set z_adjast = params.Z_ADJAST|default(vars.z_adjust)|default(2.0)|float %}
    {% set z_park = params.Z|default(act.z + z_adjast)|float %}
    {% set z_safe = vars.z_safe|default(z_adjast)|float %}

    RESPOND MSG="x_park {x_park} "
    {% if x_park > max.x %}
        {% set x_park =  (max.x - 5.0) %}
        RESPOND MSG="x_park > max.x {x_park} "

    {% endif %}

    {% if x_park < min.x %}
        {% set x_park = (min.x + 5.0) %}
        RESPOND MSG="x_park < min.x {x_park} "

    {% endif %}

    RESPOND MSG="y_park {y_park} "

    {% if y_park > max.y %}
        {% set y_park = (max.y - 5.0) %}
            RESPOND MSG="y_park > max.y {y_park} "

    {% endif %}

    {% if y_park < min.y %}
        {% set y_park = (min.y - 5.0) %}
            RESPOND MSG="y_park < min.yy_park {y_park} "

    {% endif %}

    RESPOND MSG="z_park {z_park} "

    {% if z_park < z_safe %}
        {% set z_park = z_safe %}
    {% endif %}

    {% if z_park > max.z %}
        {% set z_park = max.z %}
        RESPOND MSG="z_park > max.z {z_park} "
    {% endif %}
        
    {% if "xyz" not in printer.toolhead.homed_axes %}
        RESPOND TYPE=ERROR MSG="Printer not homed"
    {% else %}
        SAVE_GCODE_STATE NAME=PARK_STATE

        G90 ; absolute

        {% if act.z < z_safe %}
            G0 Z{z_safe}
        {% endif %}
        G0 X{x_park} Y{y_park} Z{z_park}
        
        {% if not is_absolute_coordinates %}
            G91 ; relative
        {% endif %}

        RESTORE_GCODE_STATE NAME=PARK_STATE MOVE=0
    {% endif %}

[gcode_macro STEP_ASIDE_SON]
description: park toolhead 
gcode:
    {% set min       = printer.toolhead.axis_minimum %}
    {% set max       = printer.toolhead.axis_maximum %}
    PARK Z={max.z * 0.62} 

[gcode_macro MOVE_TO_PURGE]
description: Move over the purge bucket
gcode:
    {% set vars = printer.save_variables.variables %}
    {% set min = printer.toolhead.axis_minimum %}
    {% set max = printer.toolhead.axis_maximum %}
    PARK X={min.x + 5} Y={min.y + 5} Z={vars.z_safe|default(6.66)}

[gcode_macro SMART_PARK]
description: Parks your printhead near the print area for pre-print hotend heating.
gcode:
    {% set vars = printer.save_variables.variables %}
    {% set min = printer.toolhead.axis_minimum %}
    {% set max = printer.toolhead.axis_maximum %}
    {% set act = printer.gcode_move.gcode_position %}
    {% set margin = printer.configfile.settings.bed_mesh.adaptive_margin|default(0.0)|float %}

    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}                                # Gather all object points
    {% set x_min = all_points | map(attribute=0) | min | default(max.x / 2.0) %}                                                       # Set x_min from smallest object x point
    {% set y_min = all_points | map(attribute=1) | min | default(max.y / 2.0) %}                                                       # Set y_min from smallest object y point

    {% if margin > 0 and x_min != (max.x / 2.0) and y_min != (max.y / 2.0) %}                                                           # If objects are detected and purge margin 
        {% set x_min = [ x_min - margin , x_min ] | min %}                                                                    # value is greater than 0, move
        {% set y_min = [ y_min - margin , y_min ] | min %}                                                                    # to purge location + margin
        {% set x_min = [ x_min, -1 ] | max %}
        {% set y_min = [ y_min, -1 ] | max %}
    {% endif %}

    PARK X={x_min} Y={y_min} Z={vars.z_safe|default(6.66)}
    